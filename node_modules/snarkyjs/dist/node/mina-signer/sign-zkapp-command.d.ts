import { Field } from '../provable/field-bigint.js';
import { AccountUpdate, ZkappCommand } from '../provable/gen/transaction-bigint.js';
export { accountUpdatesToCallForest, callForestHash, accountUpdateHash, feePayerHash, createFeePayer, accountUpdateFromFeePayer, };
declare type CallTree = {
    accountUpdate: AccountUpdate;
    children: CallForest;
};
declare type CallForest = CallTree[];
/**
 * Turn flat list into a hierarchical structure (forest) by letting the callDepth
 * determine parent-child relationships
 */
declare function accountUpdatesToCallForest(updates: AccountUpdate[], callDepth?: number): CallForest;
declare function accountUpdateHash(update: AccountUpdate): bigint;
declare function callForestHash(forest: CallForest): Field;
declare type FeePayer = ZkappCommand['feePayer'];
declare function createFeePayer(feePayer: FeePayer['body']): FeePayer;
declare function feePayerHash(feePayer: FeePayer): bigint;
declare function accountUpdateFromFeePayer({ body: { fee, nonce, publicKey, validUntil }, authorization: signature, }: FeePayer): AccountUpdate;
