import { Field, Bool, UInt32, UInt64, Sign } from './field-bigint.js';
import { PublicKey } from './curve-bigint.js';
import { derivedLeafTypes } from './derived-leaves.js';
import { createEvents, dataAsHash } from '../lib/events.js';
import { Poseidon } from './poseidon-bigint.js';
export { PublicKey, Field, Bool, AuthRequired, AuthorizationKind, UInt64, UInt32, Sign, TokenId, };
export { Events, SequenceEvents, StringWithHash, TokenSymbol, SequenceState };
const { TokenId, TokenSymbol, AuthRequired, AuthorizationKind } = derivedLeafTypes({ Field, Bool });
const { Events, SequenceEvents } = createEvents({ Field, Poseidon });
const SequenceState = {
    ...Field,
    emptyValue: SequenceEvents.emptySequenceState,
};
const StringWithHash = dataAsHash({
    emptyValue() {
        return {
            data: '',
            hash: 22930868938364086394602058221028773520482901241511717002947639863679740444066n,
        };
    },
    toJSON(data) {
        return data;
    },
    fromJSON(json) {
        let data = json;
        // TODO compute hash
        throw Error('unimplemented');
    },
});
//# sourceMappingURL=transaction-leaves-bigint.js.map