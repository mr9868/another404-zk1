import { Bool, Field, Scalar, Group } from '../snarky.js';
export { Field, Bool };
Field.toAuxiliary = () => [];
Bool.toAuxiliary = () => [];
Scalar.toAuxiliary = () => [];
Group.toAuxiliary = () => [];
Field.toInput = function (x) {
    return { fields: [x] };
};
// binable
Field.toBytes = function (x) {
    return [...x.toConstant().value[1]];
};
Field.fromBytes = function (bytes) {
    let uint8array = new Uint8Array(32);
    uint8array.set(bytes);
    return Object.assign(Object.create(Field(1).constructor.prototype), {
        value: [0, uint8array],
    });
};
Field.sizeInBytes = () => 32;
Bool.toInput = function (x) {
    return { packed: [[x.toField(), 1]] };
};
// binable
Bool.toBytes = function (b) {
    return [Number(b.toBoolean())];
};
Bool.fromBytes = function ([b]) {
    return Bool(!!b);
};
Bool.sizeInBytes = () => 1;
//# sourceMappingURL=core.js.map